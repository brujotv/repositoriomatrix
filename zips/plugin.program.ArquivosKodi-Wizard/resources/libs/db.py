# 
# http://arquivoskodi.com.br

import base64, codecs
magic = 'IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMgICAgICBDb3B5cmlnaHQgKEMpIDIwMTkgZHJpbmZlcm5vbyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIw0KIyAgVGhpcyBQcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgICAgICAgICMNCiMgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5ICAgICAgICAjDQojICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyLCBvciAoYXQgeW91ciBvcHRpb24pICAgICAgICAgIw0KIyAgYW55IGxhdGVyIHZlcnNpb24uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMNCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojICBUaGlzIFByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgICAgICAgICAgICAgIw0KIyAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgICAgICAgICAgICAgICMNCiMgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSAgICAgICAgICAgICAgICAjDQojICBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIw0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMNCiMgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlICAgICAgICAgICAjDQojICBhbG9uZyB3aXRoIFhCTUM7IHNlZSB0aGUgZmlsZSBDT1BZSU5HLiAgSWYgbm90LCB3cml0ZSB0byAgICAgICAgICAgICAgICAgICAgIw0KIyAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgNjc1IE1hc3MgQXZlLCBDYW1icmlkZ2UsIE1BIDAyMTM5LCBVU0EuICAgICAgICMNCiMgIGh0dHA6Ly93d3cuZ251Lm9yZy9jb3B5bGVmdC9ncGwuaHRtbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQppbXBvcnQgeGJtYw0KaW1wb3J0IHhibWNndWkNCmltcG9ydCB4Ym1jdmZzDQoNCmltcG9ydCBnbG9iDQppbXBvcnQgb3MNCmltcG9ydCByZQ0KdHJ5OiAgIyBQeXRob24gMw0KICAgIGltcG9ydCB6aXBmaWxlDQpleGNlcHQgSW1wb3J0RXJyb3I6ICAjIFB5dGhvbiAyDQogICAgZnJvbSByZXNvdXJjZXMubGlicyBpbXBvcnQgemlwZmlsZQ0KDQpmcm9tIHNxbGl0ZTMgaW1wb3J0IGRiYXBpMiBhcyBkYXRhYmFzZQ0KDQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQ0KDQpmcm9tIHJlc291cmNlcy5saWJzLmNvbW1vbi5jb25maWcgaW1wb3J0IENPTkZJRw0KZnJvbSByZXNvdXJjZXMubGlicy5jb21tb24gaW1wb3J0IGxvZ2dpbmcNCmZyb20gcmVzb3VyY2VzLmxpYnMuY29tbW9uIGltcG9ydCB0b29scw0KDQoNCmRlZiBhZGRvbl9kYXRhYmFzZShhZGRvbj1Ob25lLCBzdGF0ZT0xLCBhcnJheT1GYWxzZSk6DQogICAgZGJmaWxlID0gbGF0ZXN0X2RiKCdBZGRvbnMnKQ0KICAgIGRiZmlsZSA9IG9zLnBhdGguam9pbihDT05GSUcuREFUQUJBU0UsIGRiZmlsZSkNCiAgICBpbnN0YWxsZWR0aW1lID0gc3RyKGRhdGV0aW1lLm5vdygpKVs6LTddDQoNCiAgICBpZiBvcy5wYXRoLmV4aXN0cyhkYmZpbGUpOg0KICAgICAgICB0cnk6DQogICAgICAgICAgICB0ZXh0ZGIgPSBkYXRhYmFzZS5jb25uZWN0KGRiZmlsZSkNCiAgICAgICAgICAgIHRleHRleGUgPSB0ZXh0ZGIuY3Vyc29yKCkNCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgICAgICAgICAgbG9nZ2luZy5sb2coIkRCIEVycm8gZGUgY29uZXjDo286IHswfSIuZm9ybWF0KHN0cihlKSksIGxldmVsPXhibWMuTE9HRVJST1IpDQogICAgICAgICAgICByZXR1cm4gRmFsc2UNCiAgICBlbHNlOg0KICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgIGlmIHN0YXRlID09IDI6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgIHRleHRleGUuZXhlY3V0ZSgiREVMRVRFIGEgcGFydGlyIGluc3RhbGFkbyBPTkRFIGFkZG9uSUQgPSA/IiwgKGFkZG9uLCkpDQogICAgICAgICAgICB0ZXh0ZGIuY29tbWl0KCkNCiAgICAgICAgICAgIHRleHRleGUuY2xvc2UoKQ0KICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICBsb2dnaW5nLmxvZygiRXJybyBhbyByZW1vdmVyIHswfSBhIHBhcnRpciBEQiIuZm9ybWF0KGFkZG9uKSkNCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIHRyeToNCiAgICAgICAgaWYgbm90IGFycmF5Og0KICAgICAgICAgICAgdGV4dGV4ZS5leGVjdXRlKCdJTlNFUlQgb3UgSUdOT1JFIGVtIGluc3RhbGFkbyAoYWRkb25JRCwgZW5hYmxlZCwgaW5zdGFsbERhdGUpIFZBTFVFUyAoPyw/LD8pJywgKGFkZG9uLCBzdGF0ZSwgaW5zdGFsbGVkdGltZSwpKQ0KICAgICAgICAgICAgdGV4dGV4ZS5leGVjdXRlKCdBVFVBTElaQcOHw4NPIGluc3RhbGFkbyBTRVQgaGFiaWxpdGFkbyA9PyBPTkRFIGFkZG9uSUQgPSA/ICcsIChzdGF0ZSwgYWRkb24sKSkNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIGZvciBpdGVtIGluIGFkZG9uOg0KICAgICAgICAgICAgICAgIHRleHRleGUuZXhlY3V0ZSgnSU5TRVJJUiBvdSBJR05PUkFSIGVtIGluc3RhbGFkbyhhZGRvbklEICwgZW5hYmxlZCwgaW5zdGFsbERhdGUpIFZBTFVFUyAoPyw/LD8pJywgKGl0ZW0sIHN0YXRlLCBpbnN0YWxsZWR0aW1lLCkpDQogICAgICAgICAgICAgICAgdGV4dGV4ZS5leGVjdXRlKCdVUERBVEUgaW5zdGFsYWRvIFNFVCBoYWJpbGl0YWRvID0gPyBXSEVSRSBhZGRvbklEID0gPyAnLCAoc3RhdGUsIGl0ZW0sKSkNCiAgICAgICAgdGV4dGRiLmNvbW1pdCgpDQogICAgICAgIHRleHRleGUuY2xvc2UoKQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgbG9nZ2luZy5sb2coIkVycm9yaW5nIGVuYWJsaW5nIGFkZG9uOiB7MH0iLmZvcm1hdChhZGRvbikpDQoNCg0KZGVmIGxhdGVzdF9kYihkYik6DQogICAgaWYgZGIgaW4gQ09ORklHLkRCX0ZJTEVTOg0KICAgICAgICBtYXRjaCA9IGdsb2IuZ2xvYihvcy5wYXRoLmpvaW4oQ09ORklHLkRBVEFCQVNFLCAnezB9Ki5kYicuZm9ybWF0KGRiKSkpDQogICAgICAgIGNvbXAgPSAnezB9KC4rPykuZGInLmZvcm1hdChkYlsxOl0pDQogICAgICAgIGhpZ2hlc3QgPSAwDQogICAgICAgIGZvciBmaWxlIGluIG1hdGNoOg0KICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgIGNoZWNrID0gaW50KHJlLmNvbXBpbGUoY29tcCkuZmluZGFsbChmaWxlKVswXSkNCiAgICAgICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgICAgICBjaGVjayA9IDANCiAgICAgICAgICAgIGlmIGhpZ2hlc3QgPCBjaGVjazoNCiAgICAgICAgICAgICAgICBoaWdoZXN0ID0gY2hlY2sNCiAgICAgICAgcmV0dXJuICd7MH17MX0uZGInLmZvcm1hdChkYiwgaGlnaGVzdCkNCiAgICBlbHNlOg0KICAgICAgICByZXR1cm4gRmFsc2UNCiAgICAgICAgDQogICAgICAgIA0KZGVmIGZvcmNlX2NoZWNrX3VwZGF0ZXMoYXV0bz1GYWxzZSwgb3Zlcj1GYWxzZSk6DQogICAgaW1wb3J0IHRpbWUNCiAgICANCiAgICBpZiBub3Qgb3ZlcjoNCiAgICAgICAgbG9nZ2luZy5sb2dfbm90aWZ5KENPTkZJRy5BRERPTlRJVExFLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1tDT0xPUiB7MH1dRm9yw6dhciB2ZXJpZmljYcOnw6NvIGRlIGF0dWFsaXphw6fDtWVzWy9DT0xPUl0nLmZvcm1hdChDT05GSUcuQ09MT1IyKSkNCg0KICAgIGRiZmlsZSA9IGxhdGVzdF9kYignQWRkb25zJykNCiAgICBkYmZpbGUgPSBvcy5wYXRoLmpvaW4oQ09ORklHLkRBVEFCQVNFLCBkYmZpbGUpDQogICAgc3FsZGIgPSBkYXRhYmFzZS5jb25uZWN0KGRiZmlsZSkNCiAgICBzcWxleGUgPSBzcWxkYi5jdXJzb3IoKQ0KICAgIA0KICAgICMgZm9yY2Ugcm9sbGJhY2sgYWxsIGluc3RhbGxlZCByZXBvcw0KICAgIHNxbGV4ZS5leGVjdXRlKCJVUERBVEUgcmVwbyBTRVQgdmVyc2lvbiA9ID8sIGNoZWNrc3VtID0gPywgbGFzdGNoZWNrID0gPyIsICgnJywgJycsICcnLCkpDQogICAgc3FsZGIuY29tbWl0KCkNCg0KICAgICMgdHJpZ2dlciBrb2RpIHRvIGNoZWNrIHRoZW0gZm9yIHVwZGF0ZXMNCiAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCdVcGRhdGVBZGRvblJlcG9zJykNCg0KICAgICMgd2FpdCB1bnRpbCB0aGV5IGhhdmUgZmluaXNoZWQgdXBkYXRpbmcNCiAgICB3aXRoIHRvb2xzLmJ1c3lfZGlhbG9nKCk6DQogICAgICAgIGluc3RhbGxlZF9yZXBvcyA9IHNxbGV4ZS5leGVjdXRlKCdTRUxFQ1QgYWRkb25JRCBGUk9NIHJlcG8nKQ0KDQogICAgICAgIHN0YXJ0X3RpbWUgPSB0aW1lLnRpbWUoKQ0KICAgICAgICBjaGVja2VkX3RpbWUgPSAwDQogICAgICAgIGZvciByZXBvIGluIGluc3RhbGxlZF9yZXBvcy5mZXRjaGFsbCgpOg0KICAgICAgICAgICAgcmVwbyA9IHJlcG9bMF0NCiAgICAgICAgICAgIGxvZ2dpbmcubG9nKCdGb3JjZSBjaGVja2luZyB7MH0uLi4nLmZvcm1hdChyZXBvKSwgbGV2ZWw9eGJtYy5MT0dERUJVRykNCiAgICAgICAgICAgIHdoaWxlIGNoZWNrZWRfdGltZSA8IHN0YXJ0X3RpbWU6DQogICAgICAgICAgICAgICAgaWYgdGltZS50aW1lKCkgPj0gc3RhcnRfdGltZSArIDIwOg0KICAgICAgICAgICAgICAgICAgICBsb2dnaW5nLmxvZygnezB9IHRpbWVkIG91dCBkdXJpbmcgcmVwbyBmb3JjZSBjaGVjay4nLmZvcm1hdChyZXBvKSwgbGV2ZWw9eGJtYy5MT0dERUJVRykNCiAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICBsYXN0Y2hlY2sgPSBzcWxleGUuZXhlY3V0ZSgnU0VMRUNUIGxhc3RjaGVjayBGUk9NIHJlcG8gV0hFUkUgYWRkb25JRCA9ID8nLCAocmVwbywpKQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIGlmIGxhc3RjaGVjazoNCiAgICAgICAgICAgICAgICAgICAgY2hlY2tlZF90aW1lID0gbGFzdGNoZWNrLmZldGNob25lKClbMF0NCiAgICAgICAgICAgICAgICAgICAgY2hlY2tlZF90aW1lID0gdGltZS5ta3RpbWUodGltZS5zdHJwdGltZShjaGVja2VkX3RpbWUsICclWS0lbS0lZCAlSDolTTolUycpKSBpZiBjaGVja2VkX3RpbWUgZWxzZSAwDQogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIHhibWMuc2xlZXAoMTAwMCkNCiAgICAgICAgICAgIGNoZWNrZWRfdGltZSA9IDANCiAgICAgICAgICAgIGxvZ2dpbmcubG9nKCd7MH0gc3VjY2Vzc2Z1bGx5IGZvcmNlIGNoZWNrZWQuJy5mb3JtYXQocmVwbyksIGxldmVsPXhibWMuTE9HREVCVUcpDQogICAgICAgICAgICBsb2dnaW5nLmxvZ19ub3RpZnkoJ1tDT0xPUiB7MH1dezF9Wy'
love = '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'
god = 'ZG9ucyBlc3TDoSBhdHVhbGl6YWRhIGUgdGVudGUgbm92YW1lbnRlLlsvQ09MT1JdIikNCg0KDQpkZWYgdG9nZ2xlX2RlcGVuZGVuY3kobmFtZSwgZHA9Tm9uZSk6DQogICAgZnJvbSByZXNvdXJjZXMubGlicy5jb21tb24gaW1wb3J0IHRvb2xzDQoNCiAgICBkZXAgPSBvcy5wYXRoLmpvaW4oQ09ORklHLkFERE9OUywgbmFtZSwgJ2FkZG9uLnhtbCcpDQogICAgaWYgb3MucGF0aC5leGlzdHMoZGVwKToNCiAgICAgICAgbWF0Y2ggPSB0b29scy5wYXJzZV9kb20odG9vbHMucmVhZF9mcm9tX2ZpbGUoZGVwKSwgJ2ltcG9ydCcsIHJldD0nYWRkb24nKQ0KICAgICAgICBmb3IgZGVwZW5kcyBpbiBtYXRjaDoNCiAgICAgICAgICAgIGlmICd4Ym1jLnB5dGhvbicgbm90IGluIGRlcGVuZHM6DQogICAgICAgICAgICAgICAgZGVwZW5kc3BhdGggPSBvcy5wYXRoLmpvaW4oQ09ORklHLkFERE9OUywgZGVwZW5kcykNCiAgICAgICAgICAgICAgICBpZiBkcCBpcyBub3QgTm9uZToNCiAgICAgICAgICAgICAgICAgICAgZHAudXBkYXRlKCIiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIlZlcmlmaWNhbmRvIERlcGVuZGVuY3kgW0NPTE9SIHllbGxvd117MH1bL0NPTE9SXSBwYXJhIFtDT0xPUiB5ZWxsb3ddezF9Wy9DT0xPUl0iLmZvcm1hdChkZXBlbmRzLCBuYW1lKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIiKQ0KICAgICAgICAgICAgICAgIGlmIG9zLnBhdGguZXhpc3RzKGRlcGVuZHNwYXRoKToNCiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlX2FkZG9uKG5hbWUsICd0cnVlJykNCiAgICAgICAgICAgIHhibWMuc2xlZXAoMTAwKQ0KDQoNCiMgTk9UIENVUlJFTlRMWSBJTiBVU0UsIEJST0tFTiBEVUUgVE8gREVBRCBOYU4gTElOSw0KIyBkZWYgdG9nZ2xlX2FkdWx0KCk6DQojICAgICBmcm9tIHJlc291cmNlcy5saWJzIGltcG9ydCBndWkNCiMgICAgIGZyb20gcmVzb3VyY2VzLmxpYnMuY29tbW9uIGltcG9ydCB0b29scw0KIw0KIyAgICAgZG8gPSBndWkuRElBTE9HLnllc25vKENPTkZJRy5BRERPTlRJVExFLA0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICJbQ09MT1IgezB9XVdvdWxkIHlvdSBsaWtlIHRvIFtDT0xPUiB7MX1dRW5hYmxlWy9DT0xPUl0gb3IgW0NPTE9SIHsyfV1EaXNhYmxlWy9DT0xPUl0gYWxsIEFkdWx0IGFkZC1vbnM/Wy9DT0xPUl0iLmZvcm1hdChDT05GSUcuQ09MT1IyLCBDT05GSUcuQ09MT1IxLCBDT05GSUcuQ09MT1IxKSwNCiMgICAgICAgICAgICAgICAgICAgICAgICAgICB5ZXNsYWJlbD0iW0JdW0NPTE9SIHNwcmluZ2dyZWVuXUVuYWJsZVsvQ09MT1JdWy9CXSIsDQojICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9sYWJlbD0iW0JdW0NPTE9SIHJlZF1EaXNhYmxlWy9DT0xPUl1bL0JdIikNCiMgICAgIHN0YXRlID0gJ3RydWUnIGlmIGRvID09IDEgZWxzZSAnZmFsc2UnDQojICAgICBnb3RvID0gJ0VuYWJsaW5nJyBpZiBkbyA9PSAxIGVsc2UgJ0Rpc2FibGluZycNCiMgICAgIGxpbmsgPSB0b29scy5vcGVuX3VybCgnaHR0cDovL25vb2JzYW5kbmVyZHMuY29tL1RJL0FkZG9uUG9ydGFsL2FkdWx0LnBocCcpLnJlcGxhY2UoJ1xuJywgJycpLnJlcGxhY2UoJ1xyJywgJycpLnJlcGxhY2UoJ1x0JywgJycpDQojICAgICBsaXN0ID0gcmUuY29tcGlsZSgnaT0iKC4rPykiJykuZmluZGFsbChsaW5rKQ0KIyAgICAgZm91bmQgPSBbXQ0KIyAgICAgZm9yIGl0ZW0gaW4gbGlzdDoNCiMgICAgICAgICBmb2xkID0gb3MucGF0aC5qb2luKENPTkZJRy5BRERPTlMsIGl0ZW0pDQojICAgICAgICAgaWYgb3MucGF0aC5leGlzdHMoZm9sZCk6DQojICAgICAgICAgICAgIGZvdW5kLmFwcGVuZChpdGVtKQ0KIyAgICAgICAgICAgICB0b2dnbGVfYWRkb24oaXRlbSwgc3RhdGUsIFRydWUpDQojICAgICAgICAgICAgIGxvZ2dpbmcubG9nKCJbVG9nZ2xlIEFkdWx0XSB7MH0gezF9Ii5mb3JtYXQoZ290bywgaXRlbSkpDQojICAgICBpZiBsZW4oZm91bmQpID4gMDoNCiMgICAgICAgICBpZiBndWkuRElBTE9HLnllc25vKENPTkZJRy5BRERPTlRJVExFLA0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIltDT0xPUiB7MH1dV291bGQgeW91IGxpa2UgdG8gdmlldyBhIGxpc3Qgb2YgdGhlIGFkZC1vbnMgdGhhdCB3aGVyZSB7MX0/Wy9DT0xPUl0iLmZvcm1hdChDT05GSUcuQ09MT1IyLCBnb3RvLnJlcGxhY2UoJ2luZycsICdlZCcpKSwNCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHllc2xhYmVsPSJbQl1bQ09MT1Igc3ByaW5nZ3JlZW5dVmlldyBMaXN0Wy9DT0xPUl1bL0JdIiwNCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vbGFiZWw9IltCXVtDT0xPUiByZWRdQ2FuY2VsWy9DT0xPUl1bL0JdIik6DQojICAgICAgICAgICAgIGVkaXRsaXN0ID0gJ1tDUl0nLmpvaW4oZm91bmQpDQojICAgICAgICAgICAgIGd1aS5zaG93X3RleHRfYm94KENPTkZJRy5BRERPTlRJVExFLA0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiW0NPTE9SIHswfV1IZXJlIGFyZSBhIGxpc3Qgb2YgdGhlIGFkZC1vbnMgdGhhdCB3aGVyZSB7MX0gZm9yIEFkdWx0IENvbnRlbnQ6Wy9DT0xPUl1bQ1JdW0NSXVtDT0xPUiB7Mn1dezN9Wy9DT0xPUl0iLmZvcm1hdChDT05GSUcuQ09MT1IxLCBnb3RvLnJlcGxhY2UoJ2luZycsICdlZCcpLCBDT05GSUcuQ09MT1IyLCBlZGl0bGlzdCkpDQojICAgICAgICAgZWxzZToNCiMgICAgICAgICAgICAgbG9nZ2luZy5sb2dfbm90aWZ5KCJbQ09MT1IgezB9XXsxfVsvQ09MT1JdIi5mb3JtYXQoQ09ORklHLkNPTE9SMSwgQ09ORklHLkFERE9OVElUTEUpLA0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIltDT0xPUiB7MH1bQ09MT1IgezF9XXsyfVsvQ09MT1JdIEFkdWx0IEFkZG9ucyB7M31bL0NPTE9SXSIuZm9ybWF0KENPTkZJRy5DT0xPUjIsIENPTkZJRy5DT0xPUjEsIGNvdW50LCBnb3RvLnJlcGxhY2UoJ2luZycsICdlZCcpKSkNCiMgICAgICAgICBmcm9tIHJlc291cmNlcy5saWJzIGltcG9ydCB1cGRhdGUNCiMgICAgICAgICB1cGRhdGUuZm9yY2VfdXBkYXRlKFRydWUpDQojICAgICBlbHNlOg0KIyAgICAgICAgIGxvZ2dpbmcubG9nX25vdGlmeSgiW0NPTE9SIHswfV17MX1bL0NPTE9SXSIuZm9ybWF0KENPTkZJRy5DT0xPUjEsIENPTkZJRy5BRERPTlRJVExFKSwNCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgIltDT0xPUiB7MH1dTm8gQWR1bHQgQWRkb25zIEZvdW5kWy9DT0xPUl0iLmZvcm1hdChDT05GSUcuQ09MT1IyKSkNCg0KDQpkZWYgY3JlYXRlX3RlbXAocGx1Z2luKToNCiAgICBmcm9tIHJlc291cmNlcy5saWJzLmNvbW1vbiBpbXBvcnQgdG9vbHMNCg0KICAgIHRlbXAgPSBvcy5wYXRoLmpvaW4oQ09ORklHLlBMVUdJTiwgJ3Jlc291cmNlcycsICd0ZW1wYWRkb24ueG1sJykNCiAgICByID0gdG9vbHMucmVhZF9mcm9tX2ZpbGUodGVtcCkNCiAgICBwbHVnZGlyID0gb3MucGF0aC5qb2luKENPTkZJRy5BRERPTlMsIHBsdWdpbikNCiAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMocGx1Z2Rpcik6DQogICAgICAgIG9zLm1ha2VkaXJzKHBsdWdkaXIpDQoNCiAgICB0b29scy53cml0ZV90b19maWxlKG9zLnBhdGguam9pbihwbHVnZGlyLCAnYWRkb24ueG1sJyksIHIucmVwbGFjZSgndGVzdGlkJywgcGx1Z2luKS5yZXBsYWNlKCd0ZXN0dmVyc2lvbicsICcwLjAuMScpKQ0KICAgIGxvZ2dpbmcubG9nKCJ7MH06IHdyb3RlIGFkZG9uLnhtbCIuZm9ybWF0KHBsdWdpbikpDQoNCg0KZGVmIGZpeF9tZXRhcygpOg0KICAgIGZyb20gcmVzb3VyY2VzLmxpYnMuY29tbW9uIGltcG9ydCB0b29scw0KDQogICAgaWRsaXN0ID0gW10NCiAgICBmb3IgaXRlbSBpbiBpZGxpc3Q6DQogICAgICAgIGZvbGQgPSBvcy5wYXRoLmpvaW4oQ09ORklHLkFERE9ORCwgaXRlbSkNCiAgICAgICAgaWYgb3MucGF0aC5leGlzdHMoZm9sZCk6DQogICAgICAgICAgICBzdG9yYWdlID0gb3MucGF0aC5qb2luKGZvbGQsICcuc3RvcmFnZScpDQogICAgICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhzdG9yYWdlKToNCiAgICAgICAgICAgICAgICB0b29scy5jbGVhbl9ob3VzZShzdG9yYWdlKQ0KICAgICAgICAgICAgICAgIHRvb2xzLnJlbW92ZV9mb2xkZXIoc3RvcmFnZSkNCg0KDQojIGRlZiBoaWRlX3Bhc3N3b3JkKCk6DQojICAgICBmcm9tIHJlc291cmNlcy5saWJzLmNvbW1vbiBpbXBvcnQgdG9vbHMNCiMgICAgIGZyb20gcmVzb3VyY2VzLmxpYnMuY29tbW9uIGltcG9ydCBsb2dnaW5nDQojDQojICAgICBkaWFsb2cgPSB4Ym1jZ3VpLkRpYWxvZygpDQojDQojICAgICBpZiBkaWFsb2cueWVzbm8oQ09ORklHLkFERE9OVElUTEUsDQojICAgICAgICAgICAgICAgICAgICAgICAgICJbQ09MT1IgezB9XVdvdWxkIHlvdSBsaWtlIHRvIFtDT0xPUiB7MX1daGlkZVsvQ09MT1JdIGFsbCBwYXNzd29yZHMgd2hlbiB0eXBpbmcgaW4gdGhlIGFkZC1vbiBzZXR0aW5ncyBtZW51cz9bL0NPTE9SXSIuZm9ybWF0KENPTkZJRy5DT0xPUjIpLA0KIyAgICAgICAgICAgICAgICAgICAgICAgICB5ZXNsYWJlbD0iW0JdW0NPTE9SIHNwcmluZ2dyZWVuXUhpZGUgUGFzc3dvcmRzWy9DT0xPUl1bL0JdIiwNCiMgICAgICAgICAgICAgICAgICAgICAgICAgbm9sYWJlbD0iW0JdW0NPTE9SIHJlZF1ObyBDYW5jZWxbL0NPTE9SXVsvQl0iKToNCiMgICAgICAgICBjb3VudCA9IDANCiMgICAgICAgICBmb3IgZm9sZGVyIGluIGdsb2IuZ2xvYihvcy5wYXRoLmpvaW4oQ09ORklHLkFERE9OUywgJyovJykpOg0KIyAgICAgICAgICAgICBzZXR0ID0gb3MucGF0aC5qb2luKGZvbGRlciwgJ3Jlc291cmNlcycsICdzZXR0aW5ncy54bWwnKQ0KIyAgICAgICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhzZXR0KToNCiMgICAgICAgICAgICAgICAgIGYgPSB0b29scy5yZWFkX2Zyb21fZmlsZShzZXR0KQ0KIyAgICAgICAgICAgICAgICAgbWF0Y2ggPSB0b29scy5wYXJzZV9kb20oZiwgJ2FkZG9uJywgcmV0PSdpZCcpDQojICAgICAgICAgICAgICAgICBmb3IgbGluZSBpbiBtYXRjaDoNCiMgICAgICAgICAgICAgICAgICAgICBpZiAncGFzcycgaW4gbGluZToNCiMgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ29wdGlvbj0iaGlkZGVuIicgbm90IGluIGxpbmU6DQojICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnk6DQojICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlID0gbGluZS5yZXBsYWNlKCcvJywgJ29wdGlvbj0iaGlkZGVuIiAvJykNCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmLnJlcGxhY2UobGluZSwgY2hhbmdlKQ0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ICs9IDENCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnaW5nLmxvZygiW0hpZGUgUGFzc3dvcmRzXSBmb3VuZCBpbiB7MH0gb24gezF9Ii5mb3JtYXQoc2V0dC5yZXBsYWNlKENPTkZJRy5IT01FLCAnJyksIGxpbmUpKQ0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhjZXB0Og0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MNCiMgICAgICAgICAgICAgICAgIHRvb2xzLndyaXRlX3RvX2ZpbGUoc2V0dCwgZikNCiMgICAgICAgICBsb2dnaW5nLmxvZ19ub3RpZnkoIltDT0xPUiB7MH1dSGlkZSBQYXNzd29yZHNbL0NPTE9SXSIuZm9ybWF0KENPTkZJRy5DT0xPUjEpLA0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAiW0NPTE9SIHswfV17MX0gaXRlbXMgY2hhbmdlZFsvQ09MT1JdIi5mb3JtYX'
destiny = 'DbD09BExyUYxACGR9FZvjtL291oaDcXD0XVlNtVPNtVPNtVTkiM2qcozphoT9aXPWoFTyxMFODLKAmq29lMUAqVUfjsFOcqTIgplOwnTShM2IxVv5zo3WgLKDbL291oaDcXD0XVlNtVPNtMJkmMGbAPvZtVPNtVPNtVPOfo2qanJ5aYzkiMltvJ0ucMTHtHTSmp3qipzEmKFOQLJ5wMJkfMJDvXD0XVj0XVj0XVlOxMJLtqJ5bnJEyK3Oup3A3o3WxXPx6QDbwVPNtVPOzpz9gVUWyp291pzAypl5fnJWmYzAioJ1iovOcoKOipaDtqT9ioUZAPvZtVPNtVTMlo20tpzImo3IlL2ImYzkcLaZhL29goJ9hVTygpT9lqPOfo2qanJ5aQDbwQDbwVPNtVPOxnJSfo2ptCFO4Lz1wM3IcYxEcLJkiMltcQDbwQDbwVPNtVPOcMvOxnJSfo2phrJImoz8bD09BExyUYxSRER9BIRyHGRHfQDbwVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPWoD09ZG1VtrmO9KIqiqJkxVUyiqFOfnJgyVUEiVSgQG0kCHvO7ZK1qqJ5bnJEyJl9QG0kCHy0tLJkfVUOup3A3o3WxplO3nTIhVUE5pTyhMlOcovO0nTHtLJExYJ9hVUAyqUEcozqmVT1yoaImC1fiD09ZG1WqVv5zo3WgLKDbD09BExyUYxACGR9FZvjtD09BExyUYxACGR9FZFxfQDbwVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUyyp2kuLzIfCFWoDy1oD09ZG1Vtp3OlnJ5aM3WyMJ5qIJ5bnJEyVSOup3A3o3Wxp1fiD09ZG1WqJl9PKFVfQDbwVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVT5ioTSvMJj9VygPKIgQG0kCHvOlMJEqGz8tD2ShL2IfJl9QG0kCHy1oY0WqVvx6QDbwVPNtVPNtVPNtL291oaDtCFNjQDbwVPNtVPNtVPNtMz9lVTMioTEypvOcovOaoT9vYzqfo2Vbo3ZhpTS0nP5do2yhXRACGxMWEl5OERECGyZfVPpdYlpcXGbAPvZtVPNtVPNtVPNtVPNtp2I0qPN9VT9mYaOuqTthnz9covuzo2kxMKVfVPqlMKAiqKWwMKZaYPNap2I0qTyhM3ZhrT1fWlxAPvZtVPNtVPNtVPNtVPNtnJLto3ZhpTS0nP5yrTymqUZbp2I0qPx6QDbwVPNtVPNtVPNtVPNtVPNtVPOzVQ0tqT9ioUZhpzIuMS9zpz9gK2McoTHbp2I0qPxAPvZtVPNtVPNtVPNtVPNtVPNtVT1uqTAbVQ0tqT9ioUZhpTSlp2IsMT9gXTLfVPquMTEiovpfVUWyqQ0anJDaXD0XVlNtVPNtVPNtVPNtVPNtVPNtMz9lVTkcozHtnJ4toJS0L2t6QDbwVPNtVPNtVPNtVPNtVPNtVPNtVPNtnJLtW3Oup3ZaVTyhVTkcozH6QDbwVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTyzVPqipUEco249VzucMTEyovVaVTyhVTkcozH6QDbwVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPO0pax6QDbwVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtL2uuozqyVQ0toTyhMF5lMKOfLJAyXPqipUEco249VzucMTEyovVaYPNaWlxAPvZtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOzYaWypTkuL2HboTyhMFjtL2uuozqyXD0XVlNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTAiqJ50VPf9VQRAPvZtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOfo2qanJ5aYzkiMltvJ1IhnTyxMFODLKAmq29lMUAqVTMiqJ5xVTyhVUfjsFOiovO7ZK0vYzMipz1uqPumMKE0YaWypTkuL2HbD09BExyUYxuCGHHfVPpaXFjtoTyhMFxcQDbwVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOyrTAypUD6QDbwVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtpTSmpj0XVlNtVPNtVPNtVPNtVPNtVPNtqT9ioUZhq3WcqTIsqT9sMzyfMFumMKE0YPOzXD0XVlNtVPNtVPNtVTkiM2qcozphoT9aK25iqTyzrFtvJ0ACGR9FVUfjsI1IozucMTHtHTSmp3qipzEmJl9QG0kCHy0vYzMipz1uqPuQG05TFHphD09ZG1VkXFjAPvZtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVygQG0kCHvO7ZU1qrmS9VTy0MJ1mVTAbLJ5aMJEoY0ACGR9FKFVhMz9loJS0XRACGxMWEl5QG0kCHwVfVTAiqJ50XFxAPvZtVPNtVPNtVPOfo2qanJ5aYzkiMltvJ1IhnTyxMFODLKAmq29lMUAqVUfjsFOcqTIgplOwnTShM2IxVv5zo3WgLKDbL291oaDcXD0XVlNtVPNtMJkmMGbAPvZtVPNtVPNtVPOfo2qanJ5aYzkiMltvJ1IhnTyxMFODLKAmq29lMUAqVRAuozAyoTkyMPVcQDbAPt0XMTIzVTMcrS91pTEuqTHbXGbAPvNtVPOcMvOipl5jLKEbYzI4nKA0pluipl5jLKEbYzcinJ4bD09BExyUYyIGEIWRDIEOYPNaLKI0o2I4MJZhpUxaXFx6QDbtVPNtVPNtVUEyoKNtCFOipl5jLKEbYzcinJ4bD09BExyUYyIGEIWRDIEOYPNaLKI0o2I4MJAsqTIgpP5jrFpcQDbtVPNtVPNtVTyzVT9mYaOuqTthMKucp3EmXUEyoKNcBt0XVPNtVPNtVPNtVPNtrTWgL3Mzpl5xMJkyqTHbqTIgpPxAPvNtVPNtVPNtrTWgL3Mzpl5lMJ5uoJHbo3ZhpTS0nP5do2yhXRACGxMWEl5IH0IFERSHDFjtW2S1qT9yrTIwYaO5WlxfVUEyoKNcQDbtVPNtrTWgL3Mzpl5wo3O5XT9mYaOuqTthnz9covuQG05TFHphHRkIE0yBYPNapzImo3IlL2ImWljtW2kcLaZaYPNaLKI0o2I4MJZhpUxaXFjAPvNtVPNtVPNtVPNtVPNtVPNto3ZhpTS0nP5do2yhXRACGxMWEl5IH0IFERSHDFjtW2S1qT9yrTIwYaO5WlxcQDbtVPNtMTWznJkyVQ0to3ZhpTS0nP5do2yhXRACGxMWEl5RDIEODxSGEFjtoTS0MKA0K2EvXPqOMTEioaZaXFxAPvNtVPO0pax6QDbtVPNtVPNtVT9mYaWyoJ92MFuxLzMcoTHcQDbtVPNtMKuwMKO0Bt0XVPNtVPNtVPOfo2qanJ5aYzkiMltvIJ5uLzkyVUEiVUWyoJ92MFO7ZU0fVSO1pzqcozptERVvYzMipz1uqPuxLzMcoTHcXD0XVPNtVPNtVPOjqKWaMI9xLy9znJkyXTEvMzyfMFxAPt0XVPNtVTMlo20tpzImo3IlL2ImYzkcLaZhL29goJ9hVTygpT9lqPO0o29fpj0XVPNtVUEio2kmYzgcoTksn29xnFuiqzIlCIElqJHcQDbAPt0XMTIzVTqlLJWsLJExo25mXUOuqTtcBt0XVPNtVUcznJkyVQ0trzyjMzyfMF5nnKOTnJkyXUOuqTtfVTSfoT93JzyjAwD9IUW1MFxAPvNtVPOuMTEiozkcp3DtCFOoKD0XVPNtVTMipvOcqTIgVTyhVUcznJkyYzyhMz9fnKA0XPx6QDbtVPNtVPNtVTyzVUA0pvucqTIgYzMcoTIhLJ1yXF5znJ5xXPquMTEiov54oJjaXFN9CFNgZGbAPvNtVPNtVPNtVPNtVTAioaEcoaIyQDbtVPNtVPNtVTyhMz8tCFOmqUVbnKEyoF5znJkyozSgMFxhp3OfnKDbWl8aXD0XVPNtVPNtVPOcMvOho3DtnJ5zo1fgZy0tnJ4tLJExo25fnKA0Bt0XVPNtVPNtVPNtVPNtLJExo25fnKA0YzSjpTIhMPucozMiJl0lKFxAPvNtVPOlMKE1pz4tLJExo25fnKA0QDbAPvNtVPNAPzEyMvOznJ5xK2WcozSlrI9uMTEioaZbLJExo249W2SfoPpcBt0XVPNtVTMlo20trT1fYzI0pzIyVTygpT9lqPOSoTIgMJ50IUWyMD0XVPNtVN0XVPNtVTEcLJkiMlN9VUuvoJAaqJxhETyuoT9aXPxAPvNtVPOfo2qanJ5aYzkiMltaIzIlnJMcL2ShMT8tr30tLFOjoTS0LJMipz1uYJEypTIhMTIhL2HhYv4aYzMipz1uqPuuMTEiovxfVTkyqzIfCKuvoJZhGR9UERIPIHpcQDbtVPNtQDbtVPNtnJLtLJExo24tCG0tW2SfoPp6QDbtVPNtVPNtVTSxMT9hMz9fMTIlplN9VTqfo2VhnJqfo2Vbo3ZhpTS0nP5do2yhXRACGxMWEl5OERECGyZfVPpdYlpcXD0XVPNtVPNtVPOuMTEiozyxplN9VSgqQDbtVPNtVPNtVTSxMT9hozSgMKZtCFOoKD0XVPNtVPNtVPNAPvNtVPNtVPNtMz9lVTMioTEypvOcovOuMTEiozMioTEypaZ6QDbtVPNtVPNtVPNtVPOzo2kxMKWhLJ1yVQ0to3ZhpTS0nP5mpTkcqPuzo2kxMKWoBv0kKFyoZI0APvNtVPNtVPNtVPNtVN0XVPNtVPNtVPNtVPNtnJLtMz9fMTIlozSgMFOcovOQG05TFHphEIuQGSIREIZ6QDbtVPNtVPNtVPNtVPNtVPNtL29hqTyhqJHAPvNtVPNtVPNtVPNtVTIfnJLtMz9fMTIlozSgMFOcovOQG05TFHphERITDIIZISOZIHqWGyZ6QDbtVPNtVPNtVPNtVPNtVPNtL29hqTyhqJHAPvNtVPNtVPNtVPNtVTIfnJLtMz9fMTIlozSgMFN9CFNapTSwn2SaMKZaBt0XVPNtVPNtVPNtVPNtVPNtVTAioaEcoaIyVPNtVN0XVPNtVPNtVPNtVPNtQDbtVPNtVPNtVPNtVPO4oJjtCFOipl5jLKEbYzcinJ4bMz9fMTIlYPNaLJExo24hrT1fWlxAPvNtVPNtVPNtVPNtVN0XVPNtVPNtVPNtVPNtnJLto3ZhpTS0nP5yrTymqUZbrT1fXGbAPvNtVPNtVPNtVPNtVPNtVPOlo290VQ0tEJkyoJIhqSElMJHhpTSlp2HbrT1fXF5aMKElo290XPxAPvNtVPNtVPNtVPNtVPNtVPOuMTEiozyxVQ0tpz9iqP5aMKDbW2yxWlxAPvNtVPNtVPNtVPNtVPNtVPOuMTEioz5uoJHtCFOlo290YzqyqPtaozSgMFpcQDbtVPNtVPNtVPNtVPNtVPNtMKu0MJ5mnJ9hVQ0tpz9iqP5znJ5xXPqyrUEyoaAco24aXD0XVPNtVPNtVPNtVPNtVPNtVN0XVPNtVPNtVPNtVPNtVPNtVUElrGbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtMKu0K2S0qUWmVQ0tMKu0MJ5mnJ9hYzgyrKZbXD0XVPNtVPNtVPNtVPNtVPNtVTI4L2IjqQbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtL29hqTyhqJHAPvNtVPNtVPNtVPNtVPNtVPNAPvNtVPNtVPNtVPNtVPNtVPOzo3VtLKE0pvOcovOyrUEsLKE0paZ6QDbtVPNtVPNtVPNtVPNtVPNtVPNtVTyzVTS0qUVhp3EupaEmq2y0nPtaoTyvpzSlrI8aXGbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUElrGbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOuMTEioz5uoJImYzSjpTIhMPuuMTEioz5uoJHcQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtLJExo25cMUZhLKOjMJ5xXTSxMT9hnJDcQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOyrTAypUD6QDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtpTSmpj0XVPNtVPNtVPNAPvNtVPNtVPNtMTyuoT9aYz9eXRACGxMWEl5OERECGyEWIRkSYPNvJ0ACGR9FVUfjsI1To3IhMPOoD09ZG1VtrmS9KKflsIfiD09ZG1WqVTSxMT9hplOyp3OyL8BgMzywo3ZtMTRtpTkuqTSzo3WgLFOcoaA0LJkuMT9mByfiD09ZG1WqVv5zo3WgLKDbD09BExyUYxACGR9FZvjtD09BExyUYxACGR9FZFjtoTIhXTSxMT9hozSgMKZcXFjtVygQG0kCHvO7ZU1qrmS9Jl9QG0kCHy0vYzMipz1uqPuQG05TFHphD09ZG1VkYPOuMTEioz5uoJImXFxAPvNtVPNtVPNtQDbtVPNtVPNtVUWyqUIlovOuMTEiozyxpljtLJExo25hLJ1ypj0XVPNtVTIfp2H6QDbtVPNtVPNtVTyzVTSxMT9hVTyhVRACGxMWEl5SJRAZIHESHmbAPvNtVPNtVPNtVPNtVUWyqUIlovOBo25yYPOBo25yQDbtVPNtVPNtVTIfnJLtLJExo24tnJ4tD09BExyUYxESExSIGSEDGSIUFH5GBt0XVPNtVPNtVPNtVPNtpzI0qKWhVR5iozHfVR5iozHAPvNtVPNtVPNtQDbtVPNtVPNtVUugoPN9VT9mYaOuqTthnz9covuQG05TFHphDHERG05GYPOuMTEiovjtW2SxMT9hYaugoPpcQDbtVPNtVPNtVN0XVPNtVPNtVPOcMvOipl5jLKEbYzI4nKA0plu4oJjcBt0XVPNtVPNtVPNtVPNtoT9aM2yhMl5fo2pbW0AbMJAenJ5aVUfjsFphMz9loJS0XUugoPxfVTkyqzIfCKuvoJZhGR9UFH5TGlxAPvNtVPNtVPNtVPNtVUWio3DtCFOSoTIgMJ50IUWyMF5jLKWmMFu4oJjcYzqyqUWio3DbXD0XVPNtVPNtVPNtVPNtLJExo25cMPN9VUWio3DhM2I0XPqcMPpcQDbtVPNtVPNtVPNtVPOuMTEioz5uoJHtCFOlo290YzqyqPtaozSgMFpcQDbtVPNtVPNtVPNtVPOyrUEyoaAco24tCFOlo290YzMcozDbW2I4qTIhp2yiovpcQDbtVPNtVPNtVPNtVPNAPvNtVPNtVPNtVPNtVUElrGbAPvNtVPNtVPNtVPNtVPNtVPOyrUEsLKE0paZtCFOyrUEyoaAco24hn2I5pltcQDbtVPNtVPNtVPNtVPOyrTAypUD6QDbtVPNtVPNtVPNtVPNtVPNtpzI0qKWhVR5iozHfVR5iozHAPvNtVPNtVPNtVPNtVN0XVPNtVPNtVPNtVPNtMz9lVTS0qUVtnJ4tMKu0K2S0qUWmBt0XVPNtVPNtVPNtVPNtVPNtVTyzVTS0qUVhp3EupaEmq2y0nPtaoTyvpzSlrI8aXGbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtpzI0qKWhVTSxMT9hnJDfVTSxMT9hozSgMD0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtQDbtVPNtVPNtVUWyqUIlovOBo25yYPOBo25y'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))