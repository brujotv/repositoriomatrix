# 
# http://arquivoskodi.com.br

import base64, codecs
magic = 'IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiMgICAgICBDb3B5cmlnaHQgKEMpIDIwMTkgZHJpbmZlcm5vbyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIw0KIyAgVGhpcyBQcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgICAgICAgICMNCiMgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5ICAgICAgICAjDQojICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyLCBvciAoYXQgeW91ciBvcHRpb24pICAgICAgICAgIw0KIyAgYW55IGxhdGVyIHZlcnNpb24uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMNCiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojICBUaGlzIFByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgICAgICAgICAgICAgIw0KIyAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgICAgICAgICAgICAgICMNCiMgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSAgICAgICAgICAgICAgICAjDQojICBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIw0KIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMNCiMgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlICAgICAgICAgICAjDQojICBhbG9uZyB3aXRoIFhCTUM7IHNlZSB0aGUgZmlsZSBDT1BZSU5HLiAgSWYgbm90LCB3cml0ZSB0byAgICAgICAgICAgICAgICAgICAgIw0KIyAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgNjc1IE1hc3MgQXZlLCBDYW1icmlkZ2UsIE1BIDAyMTM5LCBVU0EuICAgICAgICMNCiMgIGh0dHA6Ly93d3cuZ251Lm9yZy9jb3B5bGVmdC9ncGwuaHRtbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KDQppbXBvcnQgeGJtYw0KaW1wb3J0IHhibWNndWkNCg0KaW1wb3J0IGdsb2INCmltcG9ydCBvcw0KaW1wb3J0IHJlDQppbXBvcnQgc3lzDQoNCnRyeToNCiAgICBmcm9tIHVybGxpYi5yZXF1ZXN0IGltcG9ydCB1cmxvcGVuDQogICAgZnJvbSB1cmxsaWIucmVxdWVzdCBpbXBvcnQgUmVxdWVzdA0KZXhjZXB0IEltcG9ydEVycm9yOg0KICAgIGZyb20gdXJsbGliMiBpbXBvcnQgdXJsb3Blbg0KICAgIGZyb20gdXJsbGliMiBpbXBvcnQgUmVxdWVzdA0KDQpmcm9tIHJlc291cmNlcy5saWJzLmNvbW1vbi5jb25maWcgaW1wb3J0IENPTkZJRw0KDQoNCmRlZiBjaGVja19wYXRocygpOg0KICAgIGZyb20gcmVzb3VyY2VzLmxpYnMuY29tbW9uIGltcG9ydCBsb2dnaW5nDQoNCiAgICBkaWFsb2cgPSB4Ym1jZ3VpLkRpYWxvZygpDQogICAgDQogICAgbG9nZ2luZy5sb2coIltQYXRoIENoZWNrXSBTdGFydGVkIikNCiAgICBwYXRoID0gQ09ORklHLkFERE9OX1BBVEgNCiAgICBwYXRoY2xlYW4gPSBDT05GSUcuQURET05fUEFUSC5yZXBsYWNlKCdcXCcsJy8nKQ0KICAgIGZvbGRlcnBhdGggPSBwYXRoY2xlYW4uc3BsaXQoJy8nKVstMl0NCiAgICBpZiBub3QgQ09ORklHLkFERE9OX0lEID09IGZvbGRlcnBhdGg6DQogICAgICAgIGRpYWxvZy5vayhDT05GSUcuQURET05USVRMRSwNCiAgICAgICAgICAgICAgICAgICAgICAnW0NPTE9SIHswfV1DZXJ0aWZpcXVlLXNlIGRlIHF1ZSBhIHBhc3RhIGRvIHBsdWdpbiDDqSBhIG1lc21hIHF1ZSBhIGlkIGRvIGFkZC1vbi5bL0NPTE9SXScuZm9ybWF0KENPTkZJRy5DT0xPUjIpICsgJ1xuJyArICdbQ09MT1IgezB9XVBsdWdpbiBJRDpbL0NPTE9SXSBbQ09MT1IgezF9XXsyfVsvQ09MT1JdJy5mb3JtYXQoQ09ORklHLkNPTE9SMiwgQ09ORklHLkNPTE9SMSwgQ09ORklHLkFERE9OX0lEKSArICdcbicgKyAnW0NPTE9SIHswfV1QYXN0YSBQbHVnaW46Wy9DT0xPUl0gW0NPTE9SIHsxfV17Mn1bL0NPTE9SXScuZm9ybWF0KENPTkZJRy5DT0xPUjIsIENPTkZJRy5DT0xPUjEsIHBhdGgpKQ0KICAgICAgICBsb2dnaW5nLmxvZygiW1BhdGggQ2hlY2tdIEFERE9OIElEIGUgcGFzdGEgZGUgcGx1Zy1pbiBuw6NvIGNvcnJlc3BvbmRlbS4gezB9IC8gezF9ICIuZm9ybWF0KENPTkZJRy5BRERPTl9JRCwgcGF0aCkpDQogICAgZWxzZToNCiAgICAgICAgbG9nZ2luZy5sb2coIltQYXRoIENoZWNrXSBHb29kISIpDQoNCg0KZGVmIGNoZWNrX2J1aWxkKG5hbWUsIHJldCk6DQogICAgZnJvbSByZXNvdXJjZXMubGlicy5jb21tb24gaW1wb3J0IHRvb2xzDQoNCiAgICByZXNwb25zZSA9IHRvb2xzLm9wZW5fdXJsKENPTkZJRy5CVUlMREZJTEUpDQoNCiAgICBpZiBub3QgcmVzcG9uc2U6DQogICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgbGluayA9IHJlc3BvbnNlLnRleHQucmVwbGFjZSgnXG4nLCAnJykucmVwbGFjZSgnXHInLCAnJykucmVwbGFjZSgnXHQnLCAnJylcDQogICAgICAgIC5yZXBsYWNlKCdndWk9IiInLCAnZ3VpPSJodHRwOi8vIicpLnJlcGxhY2UoJ3RoZW1lPSIiJywgJ3RoZW1lPSJodHRwOi8vIicpDQogICAgbWF0Y2ggPSByZS5jb21waWxlKCduYW1lPSIlcyIuKz9lcnNpb249IiguKz8pIi4rP3JsPSIoLis/KSIuKz9pbm9yPSIoLis/KSIuKz91aT0iKC4rPykiLis/b2RpPSIoLis/KSIuKz9oZW1lPSIoLis/KSIuKz9jb249IiguKz8pIi4rP2FuYXJ0PSIoLis/KSIuKz9yZXZpZXc9IiguKz8pIi4rP2R1bHQ9IiguKz8pIi4rP25mbz0iKC4rPykiLis/ZXNjcmlwdGlvbj0iKC4rPykiJyAlIG5hbWUpLmZpbmRhbGwobGluaykNCiAgICBpZiBsZW4obWF0Y2gpID4gMDoNCiAgICAgICAgZm9yIHZlcnNpb24sIHVybCwgbWlub3IsIGd1aSwga29kaSwgdGhlbWUsIGljb24sIGZhbmFydCwgcHJldmlldywgYWR1bHQsIGluZm8sIGRlc2NyaXB0aW9uIGluIG1hdGNoOg0KICAgICAgICAgICAgaWYgcmV0ID09ICd2ZXJzaW9uJzoNCiAgICAgICAgICAgICAgICByZXR1cm4gdmVyc2lvbg0KICAgICAgICAgICAgZWxpZiByZXQgPT0gJ3VybCc6DQogICAgICAgICAgICAgICAgcmV0dXJuIHVybA0KICAgICAgICAgICAgZWxpZiByZXQgPT0gJ21pbm9yJzoNCiAgICAgICAgICAgICAgICByZXR1cm4gbWlub3INCiAgICAgICAgICAgIGVsaWYgcmV0ID09ICdndWknOg0KICAgICAgICAgICAgICAgIHJldHVybiBndWkNCiAgICAgICAgICAgIGVsaWYgcmV0ID09ICdrb2RpJzoNCiAgICAgICAgICAgICAgICByZXR1cm4ga29kaQ0KICAgICAgICAgICAgZWxpZiByZXQgPT0gJ3RoZW1lJzoNCiAgICAgICAgICAgICAgICByZXR1cm4gdGhlbWUNCiAgICAgICAgICAgIGVsaWYgcmV0ID09ICdpY29uJzoNCiAgICAgICAgICAgICAgICByZXR1cm4gaWNvbg0KICAgICAgICAgICAgZWxpZiByZXQgPT0gJ2ZhbmFydCc6DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbmFydA0KICAgICAgICAgICAgZWxpZiByZXQgPT0gJ3ByZXZpZXcnOg0KICAgICAgICAgICAgICAgIHJldHVybiBwcmV2aWV3DQogICAgICAgICAgICBlbGlmIHJldCA9PSAnYWR1bHQnOg0KICAgICAgICAgICAgICAgIHJldHVybiBhZHVsdA0KICAgICAgICAgICAgZWxpZiByZXQgPT0gJ2Rlc2NyaXB0aW9uJzoNCiAgICAgICAgICAgICAgICByZXR1cm4gZGVzY3JpcHRpb24NCiAgICAgICAgICAgIGVsaWYgcmV0ID09ICdpbmZvJzoNCiAgICAgICAgICAgICAgICByZXR1cm4gaW5mbw0KICAgICAgICAgICAgZWxpZiByZXQgPT0gJ2FsbCc6DQogICAgICAgICAgICAgICAgcmV0dXJuIG5hbWUsIHZlcnNpb24sIHVybCwgbWlub3IsIGd1aSwga29kaSwgdGhlbWUsIGljb24sIGZhbmFydCwgcHJldmlldywgYWR1bHQsIGluZm8sIGRlc2NyaXB0aW9uDQogICAgZWxzZToNCiAgICAgICAgcmV0dXJuIEZhbHNlDQoNCg0KZGVmIGNoZWNrX2luZm8obmFtZSk6DQogICAgZnJvbSByZXNvdXJjZXMubGlicy5jb21tb24gaW1wb3J0IHRvb2xzDQoNCiAgICBsaW5rID0gbmFtZS5yZXBsYWNlKCdcbicsICcnKS5yZXBsYWNlKCdccicsICcnKS5yZXBsYWNlKCdcdCcsICcnKQ0KICAgIG1hdGNoID0gcmUuY29tcGlsZSgnLis/YW1lPSIoLis/KSIuKz94dHJhY3RlZD0iKC4rPykiLis/aXBzaXplPSIoLis/KSIuKz9raW49IiguKz8pIi4rP3JlYXRlZD0iKC4rPykiLis/cm9ncmFtcz0iKC4rPykiLis/aWRlbz0iKC4rPykiLis/dXNpYz0iKC4rPykiLis/aWN0dXJlPSIoLis/KSIuKz9lcG9zPSIoLis/KSIuKz9jcmlwdHM9IiguKz8pIi4rP2luYXJpZXM9IiguKz8pIicpLmZpbmRhbGwobGluaykNCiAgICBpZiBsZW4obWF0Y2gpID4gMDoNCiAgICAgICAgZm9yIG5hbWUsIGV4dHJhY3RlZCwgemlwc2l6ZSwgc2tpbiwgY3JlYXRlZCwgcHJvZ3JhbXMsIHZpZGVvLCBtdXNpYywgcGljdHVyZSwgcmVwb3MsIHNjcmlwdHMsIGJpbmFyaWVzIGluIG1hdGNoOg0KICAgICAgICAgICAgcmV0dXJuIG5hbWUsIGV4dHJhY3RlZCwgemlwc2l6ZSwgc2tpbiwgY3JlYXRlZCwgcHJvZ3JhbXMsIHZpZGVvLCBt'
love = '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'
god = 'bmxpc3QuYXBwZW5kKHN0cihtYXRjaFswXSkpDQogICAgICAgICAgICAgICAgICAgIHNraW5uYW1lLmFwcGVuZChzdHIobWF0Y2gyWzBdKSkNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICBsb2dnaW5nLmxvZygiSUQgbm90IGZvdW5kIGZvciB7MH0iLmZvcm1hdChmb2xkZXIpKQ0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBsb2dnaW5nLmxvZygiSUQgbm90IGZvdW5kIGZvciB7MH0iLmZvcm1hdChmb2xkZXIpKQ0KICAgICAgICBpZiBsZW4oc2tpbmxpc3QpID4gMDoNCiAgICAgICAgICAgIGlmIGxlbihza2lubGlzdCkgPiAxOg0KICAgICAgICAgICAgICAgIGlmIGRpYWxvZy55ZXNubyhDT05GSUcuQURET05USVRMRSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJbQ09MT1IgezB9XVBhcmVjZSBxdWUgYSBwZWxlIGZvaSBjb2xvY2FkYSBkZSB2b2x0YSBbQ09MT1IgezF9XXsyfVsvQ09MT1JdIi5mb3JtYXQoQ09ORklHLkNPTE9SMiwgQ09ORklHLkNPTE9SMSwgQ09ORklHLlNLSU5bNTpdLnRpdGxlKCkpICsgJ1xuJyArICJWb2PDqiBnb3N0YXJpYSBkZSB2ZXIgdW1hIGxpc3RhIGRlIHNraW5zIGRpc3BvbsOtdmVpcz9bL0NPTE9SXSIpOg0KICAgICAgICAgICAgICAgICAgICBjaG9pY2UgPSBkaWFsb2cuc2VsZWN0KCJTZWxlY2lvbmUgYSBwZWxlIHBhcmEgbXVkYXIhIiwgc2tpbm5hbWUpDQogICAgICAgICAgICAgICAgICAgIGlmIGNob2ljZSA9PSAtMToNCiAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dpbmcubG9nKCJTa2luIHdhcyBub3QgcmVzZXQiKQ0KICAgICAgICAgICAgICAgICAgICAgICAgQ09ORklHLnNldF9zZXR0aW5nKCdkZWZhdWx0c2tpbmlnbm9yZScsICd0cnVlJykNCiAgICAgICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgIGdvdG9za2luID0gc2tpbmxpc3RbY2hvaWNlXQ0KICAgICAgICAgICAgICAgICAgICAgICAgZ290b25hbWUgPSBza2lubmFtZVtjaG9pY2VdDQogICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgbG9nZ2luZy5sb2coIlNraW4gd2FzIG5vdCByZXNldCIpDQogICAgICAgICAgICAgICAgICAgIENPTkZJRy5zZXRfc2V0dGluZygnZGVmYXVsdHNraW5pZ25vcmUnLCAndHJ1ZScpDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIGlmIGRpYWxvZy55ZXNubyhDT05GSUcuQURET05USVRMRSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJbQ09MT1IgezB9XVBhcmVjZSBxdWUgYSBwZWxlIGZvaSBjb2xvY2FkYSBkZSB2b2x0YSBbQ09MT1IgezF9XXsyfVsvQ09MT1JdIi5mb3JtYXQoQ09ORklHLkNPTE9SMiwgQ09ORklHLkNPTE9SMSwgQ09ORklHLlNLSU5bNTpdLnRpdGxlKCkpICsgJ1xuJyArICJWb2PDqiBnb3N0YXJpYSBkZSBkZWZpbmlyIG8gdGVtYSBkZSB2b2x0YSBwYXJhOlsvQ09MT1JdIiArICdcbicgKyAnW0NPTE9SIHswfV17MX1bL0NPTE9SXScuZm9ybWF0KENPTkZJRy5DT0xPUjEsIHNraW5uYW1lWzBdKSk6DQogICAgICAgICAgICAgICAgICAgIGdvdG9za2luID0gc2tpbmxpc3RbMF0NCiAgICAgICAgICAgICAgICAgICAgZ290b25hbWUgPSBza2lubmFtZVswXQ0KICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgIGxvZ2dpbmcubG9nKCJTa2luIHdhcyBub3QgcmVzZXQiKQ0KICAgICAgICAgICAgICAgICAgICBDT05GSUcuc2V0X3NldHRpbmcoJ2RlZmF1bHRza2luaWdub3JlJywgJ3RydWUnKQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgbG9nZ2luZy5sb2coIk5vIHNraW5zIGZvdW5kIGluIGFkZG9ucyBmb2xkZXIuIikNCiAgICAgICAgICAgIENPTkZJRy5zZXRfc2V0dGluZygnZGVmYXVsdHNraW5pZ25vcmUnLCAndHJ1ZScpDQogICAgICAgICAgICBnb3Rvc2tpbiA9IEZhbHNlDQogICAgaWYgZ290b3NraW46DQogICAgICAgIGZyb20gcmVzb3VyY2VzLmxpYnMgaW1wb3J0IHNraW4NCg0KICAgICAgICBpZiBza2luLnN3aXRjaF90b19za2luKGdvdG9za2luKToNCiAgICAgICAgICAgIHNraW4ubG9va19hbmRfZmVlbF9kYXRhKCdyZXN0b3JlJykNCiAgICBsb2dnaW5nLmxvZygiW0J1aWxkIENoZWNrXSBJbnZhbGlkIFNraW4gQ2hlY2sgRW5kIikNCg0KDQpkZWYgY2hlY2tfc291cmNlcygpOg0KICAgIGZyb20gcmVzb3VyY2VzLmxpYnMuY29tbW9uIGltcG9ydCBsb2dnaW5nDQogICAgZnJvbSByZXNvdXJjZXMubGlicy5jb21tb24gaW1wb3J0IHRvb2xzDQoNCiAgICBkaWFsb2cgPSB4Ym1jZ3VpLkRpYWxvZygpDQogICAgcHJvZ3Jlc3NfZGlhbG9nID0geGJtY2d1aS5EaWFsb2dQcm9ncmVzcygpDQogICAgDQogICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKENPTkZJRy5TT1VSQ0VTKToNCiAgICAgICAgbG9nZ2luZy5sb2dfbm90aWZ5KENPTkZJRy5BRERPTlRJVExFLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIltDT0xPUiB7MH1dTm8gc291cmNlcy54bWwgRmlsZSBGb3VuZCFbL0NPTE9SXSIuZm9ybWF0KENPTkZJRy5DT0xPUjIpKQ0KICAgICAgICByZXR1cm4gRmFsc2UNCiAgICB4ID0gMA0KICAgIGJhZCA9IFtdDQogICAgcmVtb3ZlID0gW10NCiAgICBhID0gdG9vbHMucmVhZF9mcm9tX2ZpbGUoQ09ORklHLlNPVVJDRVMpDQogICAgdGVtcCA9IGEucmVwbGFjZSgnXHInLCAnJykucmVwbGFjZSgnXG4nLCAnJykucmVwbGFjZSgnXHQnLCAnJykNCiAgICBtYXRjaCA9IHJlLmNvbXBpbGUoJzxmaWxlcz4uKz88L2ZpbGVzPicpLmZpbmRhbGwodGVtcCkNCg0KICAgIGlmIGxlbihtYXRjaCkgPiAwOg0KICAgICAgICBtYXRjaDIgPSByZS5jb21waWxlKCc8c291cmNlPi4rPzxuYW1lPiguKz8pPC9uYW1lPi4rPzxwYXRoIHBhdGh2ZXJzaW9uPSIxIj4oLis/KTwvcGF0aD4uKz88YWxsb3dzaGFyaW5nPiguKz8pPC9hbGxvd3NoYXJpbmc+Lis/PC9zb3VyY2U+JykuZmluZGFsbChtYXRjaFswXSkNCiAgICAgICAgcHJvZ3Jlc3NfZGlhbG9nLmNyZWF0ZShDT05GSUcuQURET05USVRMRSwgIltDT0xPUiB7MH1dU2Nhbm5pbmcgU291cmNlcyBmb3IgQnJva2VuIGxpbmtzWy9DT0xPUl0iLmZvcm1hdChDT05GSUcuQ09MT1IyKSkNCiAgICAgICAgZm9yIG5hbWUsIHBhdGgsIHNoYXJpbmcgaW4gbWF0Y2gyOg0KICAgICAgICAgICAgeCArPSAxDQogICAgICAgICAgICBwZXJjID0gaW50KHRvb2xzLnBlcmNlbnRhZ2UoeCwgbGVuKG1hdGNoMikpKQ0KICAgICAgICAgICAgcHJvZ3Jlc3NfZGlhbG9nLnVwZGF0ZShwZXJjLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAnJyArICdcbicgKyAiW0NPTE9SIHswfV1DaGVja2luZyBbQ09MT1IgezF9XXsyfVsvQ09MT1JdOlsvQ09MT1JdIi5mb3JtYXQoQ09ORklHLkNPTE9SMiwgQ09ORklHLkNPTE9SMSwgbmFtZSkgKyAnXG4nICsgIltDT0xPUiB7MH1dezF9Wy9DT0xPUl0iLmZvcm1hdChDT05GSUcuQ09MT1IxLCBwYXRoKSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICB3b3JraW5nID0gdG9vbHMub3Blbl91cmwocGF0aCwgY2hlY2s9VHJ1ZSkNCiAgICAgICAgICAgIGlmIG5vdCB3b3JraW5nOg0KICAgICAgICAgICAgICAgIGJhZC5hcHBlbmQoW25hbWUsIHBhdGgsIHNoYXJpbmcsIHdvcmtpbmddKQ0KDQogICAgICAgIGxvZ2dpbmcubG9nKCJCYWQgU291cmNlczogezB9Ii5mb3JtYXQobGVuKGJhZCkpKQ0KICAgICAgICBpZiBsZW4oYmFkKSA+IDA6DQogICAgICAgICAgICBjaG9pY2UgPSBkaWFsb2cueWVzbm8oQ09ORklHLkFERE9OVElUTEUsICJbQ09MT1IgezB9XXsxfVsvQ09MT1JdW0NPTE9SIHsyfV0gRm9udGUgKHMpIGZvcmFtIGVuY29udHJhZGFzIHF1ZWJyYWRhcyIuZm9ybWF0KENPTkZJRy5DT0xPUjEsIGxlbihiYWQpLCBDT05GSUcuQ09MT1IyKSArICdcbicgKyAiVm9jw6ogZ29zdGFyaWEgZGUgUmVtb3ZlciB0dWRvIG91IGVzY29saGVyIHVtIHBvciB1bT9bL0NPTE9SXSIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHllc2xhYmVsPSJbQl1bQ09MT1Igc3ByaW5nZ3JlZW5dUmVtb3ZlciB0dWRvWy9DT0xPUl1bL0JdIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9sYWJlbD0iW0JdW0NPTE9SIHJlZF1Fc2NvbGhhIEV4Y2x1aXJbL0NPTE9SXVsvQl0iKQ0KICAgICAgICAgICAgaWYgY2hvaWNlID09IDE6DQogICAgICAgICAgICAgICAgcmVtb3ZlID0gYmFkDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIGZvciBuYW1lLCBwYXRoLCBzaGFyaW5nLCB3b3JraW5nIGluIGJhZDoNCiAgICAgICAgICAgICAgICAgICAgbG9nZ2luZy5sb2coInswfSBzb3VyY2VzOiB7MX0sIHsyfSIuZm9ybWF0KG5hbWUsIHBhdGgsIHdvcmtpbmcpKQ0KICAgICAgICAgICAgICAgICAgICBpZiBkaWFsb2cueWVzbm8oQ09ORklHLkFERE9OVElUTEUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIltDT0xPUiB7MH1dezF9Wy9DT0xPUl1bQ09MT1IgezJ9XSBmb2kgcmVsYXRhZG8gY29tbyBuw6NvIGZ1bmNpb25hbmRvIi5mb3JtYXQoQ09ORklHLkNPTE9SMSwgbmFtZSwgQ09ORklHLkNPTE9SMikgKyAnXG4nICsgIltDT0xPUiB7MH1dezF9Wy9DT0xPUl0iLmZvcm1hdChDT05GSUcuQ09MT1IxLCBwYXRoKSArICdcbicgKyAiW0NPTE9SIHswfV17MX1bL0NPTE9SXSIuZm9ybWF0KENPTkZJRy5DT0xPUjEsIHdvcmtpbmcpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHllc2xhYmVsPSJbQl1bQ09MT1Igc3ByaW5nZ3JlZW5dUmVtb3ZlciBmb250ZVsvQ09MT1JdWy9CXSIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9sYWJlbD0iW0JdW0NPTE9SIHJlZF1HdWFyZGFyIGZvbnRlWy9DT0xPUl1bL0JdIik6DQogICAgICAgICAgICAgICAgICAgICAgICByZW1vdmUu'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))